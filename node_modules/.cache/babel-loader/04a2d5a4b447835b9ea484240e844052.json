{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/telsheikh/Desktop/Beans/beans2/src/Components/InputTesting.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n            height: 24px;\\n            font-size: 17px;\\n            font-weight: normal;\\n            font-style: normal;\\n            font-stretch: normal;\\n            line-height: normal;\\n            letter-spacing: 0.7px;\\n            color: #ffffff;\\n            display: block;\\n          \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n            width: 229px;\\n            height: 42px;\\n            background: transparent;\\n            border: solid 1px rgba(0, 0, 0, 0.45);\\n            box-shadow: 0px 0px 0px 1.5px #f8e71c;\\n            border-radius: 8px;\\n            display: block;\\n            font-size: 15px;\\n            font-weight: normal;\\n            font-style: normal;\\n            font-stretch: normal;\\n            line-height: normal;\\n            letter-spacing: 0.7px;\\n            color: #ffffff;\\n            padding-left: 5px;\\n\\n          \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    /* height: 24px;\\n    font-size: 17px;\\n    font-weight: normal;\\n    font-style: normal;\\n    font-stretch: normal;\\n    line-height: normal;\\n    letter-spacing: 0.7px; */\\n    color: #FD0909;\\n    display: block;\\n    margin-top : -1px;\\n\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n            height: 24px;\\n            font-size: 17px;\\n            font-weight: normal;\\n            font-style: normal;\\n            font-stretch: normal;\\n            line-height: normal;\\n            letter-spacing: 0.7px;\\n            color: #ffffff;\\n            display: block;\\n          \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nvar InputTesting =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputTesting, _Component);\n\n  function InputTesting() {\n    var _this;\n\n    _classCallCheck(this, InputTesting);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputTesting).call(this));\n    _this.state = {\n      firstName: \"\",\n      secondName: \"\",\n      domainName: \"\",\n      emailData: \"\"\n    };\n    _this.handleFirstName = _this.handleFirstName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSecondName = _this.handleSecondName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDomainName = _this.handleDomainName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.stringManipulation = _this.stringManipulation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeWhiteSpace = _this.removeWhiteSpace.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(InputTesting, [{\n    key: \"handleFirstName\",\n    value: function handleFirstName(event) {\n      this.setState({\n        firstName: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSecondName\",\n    value: function handleSecondName(event) {\n      this.setState({\n        secondName: event.target.value\n      });\n    }\n  }, {\n    key: \"handleDomainName\",\n    value: function handleDomainName(event) {\n      this.setState({\n        domainName: event.target.value\n      });\n    }\n  }, {\n    key: \"passData\",\n    value: function passData() {\n      // return (this.state.firstName, this.state.secondName, this.state.domainName)\n      var data = {\n        first_name: this.state.firstName,\n        second_name: this.state.secondName,\n        domain_name: this.state.domainName\n      };\n      return data;\n    }\n  }, {\n    key: \"sanityChecking\",\n    value: function sanityChecking() {\n      var firstname = this.state.firstName;\n      var secondname = this.state.secondName;\n      var domainname = this.state.domainName; // check if there is any whitespace\n\n      if (/\\s/.test(firstname) == true || /\\s/.test(secondname) == true || /\\s/.test(domainname) == true) {\n        console.log(\"ERROR space\");\n      } else {\n        console.log(\"GOOD space\");\n      } // check that all inputs are not empty\n\n\n      if (firstname == null || firstname == \"\" || secondname == null || secondname == \"\" || domainname == null || domainname == \"\") {\n        console.log(\"ERROR empty string \");\n      } else {\n        console.log(\"GOOD empty string\");\n      } // that domain has @ in it and at least one dot\n\n\n      if (domainname.charAt(0) !== \"@\" || domainname.includes(\".\") === false) {\n        console.log(\"ERROR @ or . \");\n      } else {\n        console.log(\"GOOD @ or .\");\n      } // check length of inputs\n\n\n      if (firstname.length > 15 || secondname.length > 15 || domainname.length > 24) {\n        console.log(\"ERROR length \");\n      } else {\n        console.log(\"GOOD length\");\n      }\n\n      this.predictEmail();\n    }\n  }, {\n    key: \"removeWhiteSpace\",\n    value: function removeWhiteSpace() {\n      var _this2 = this;\n\n      this.setState({\n        firstName: this.state.firstName.trim()\n      }, this.setState({\n        secondName: this.state.secondName.trim()\n      }, this.setState({\n        domainName: this.state.domainName.trim()\n      }, function () {\n        _this2.sanityChecking();\n      }))); // this.setState({ secondName: this.state.secondName.trim() })\n      // this.setState({ domainName: this.state.domainName.trim() })\n    }\n  }, {\n    key: \"predictEmail\",\n    value: function predictEmail() {\n      var _this3 = this;\n\n      var firstname = this.state.firstName;\n      var secondname = this.state.secondName;\n      var domainname = this.state.domainName;\n      var emailOne = firstname + domainname;\n      var emailTwo = secondname + domainname;\n      var emailThree = firstname + secondname + domainname;\n      var emailFour = firstname.charAt(0) + secondname + domainname;\n      var emailFive = firstname + \".\" + secondname + domainname;\n      var emailSix = firstname + \"_\" + secondname + domainname;\n      var emailData = {\n        emailOne: emailOne,\n        emailTwo: emailTwo,\n        emailThree: emailThree,\n        emailFour: emailFour,\n        emailFive: emailFive,\n        emailSix: emailSix // this.props.passDataApp(emailData)\n        // console.log(emailData)\n\n      };\n      this.setState({\n        emailData: emailData\n      }, function () {\n        _this3.props.passDataApp(_this3.state.emailData);\n      });\n    }\n  }, {\n    key: \"stringManipulation\",\n    value: function stringManipulation() {\n      this.removeWhiteSpace(); // let firstname = this.state.firstName\n      // let secondname = this.state.secondName\n      // let domainname = this.state.domainName\n      // let emailOne = firstname+domainname\n      // let emailTwo = secondname+domainname\n      // let emailThree = firstname+secondname+domainname\n      // let emailFour = firstname.charAt(0)+secondname+domainname\n      // let emailFive = firstname+\".\"+secondname+domainname\n      // let emailSix = firstname+\"_\"+secondname+domainname\n      //\n      // let emailData = {\n      //   emailOne: emailOne, emailTwo: emailTwo, emailThree: emailThree,\n      //   emailFour: emailFour, emailFive: emailFive, emailSix: emailSix\n      // }\n      //\n      // // this.props.passDataApp(emailData)\n      // // console.log(emailData)\n      // this.setState({emailData: emailData},   ()=> {this.props.passDataApp(this.state.emailData)}  );\n      // this.setState({emailData: emailData}, this.props.passDataApp(this.state.emailData))\n    }\n  }, {\n    key: \"errorInputs\",\n    value: function errorInputs() {\n      var _this4 = this;\n\n      var Label = styled.label(_templateObject());\n      var ErrorFont = styled.p(_templateObject2());\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"FIRST NAME\"), React.createElement(\"input\", {\n        id: \"ErrorInput\",\n        value: this.state.firstName,\n        onChange: function onChange(event) {\n          _this4.handleFirstName(event);\n        },\n        placeholder: \"mark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(ErrorFont, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"hmm this is required \"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var Input = styled.input(_templateObject3());\n      var Label = styled.label(_templateObject4());\n      return React.createElement(\"div\", {\n        id: \"Flexbox_Div_inputs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, this.errorInputs()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"SECOND NAME\"), React.createElement(\"input\", {\n        id: \"MainInput\",\n        value: this.state.secondName,\n        onChange: function onChange(event) {\n          _this5.handleSecondName(event);\n        },\n        placeholder: \"zuck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"DOMAIN\"), React.createElement(\"input\", {\n        id: \"MainInput\",\n        value: this.state.domainName,\n        onChange: function onChange(event) {\n          _this5.handleDomainName(event);\n        },\n        placeholder: \"@fb.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return InputTesting;\n}(Component);\n\nexport default InputTesting;","map":{"version":3,"sources":["/Users/telsheikh/Desktop/Beans/beans2/src/Components/InputTesting.js"],"names":["React","Component","styled","InputTesting","state","firstName","secondName","domainName","emailData","handleFirstName","bind","handleSecondName","handleDomainName","stringManipulation","removeWhiteSpace","event","setState","target","value","data","first_name","second_name","domain_name","firstname","secondname","domainname","test","console","log","charAt","includes","length","predictEmail","trim","sanityChecking","emailOne","emailTwo","emailThree","emailFour","emailFive","emailSix","props","passDataApp","Label","label","ErrorFont","p","Input","input","errorInputs"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\n\nclass InputTesting extends Component {\n  constructor() {\n      super();\n      this.state = {\n        firstName: \"\",\n        secondName: \"\",\n        domainName: \"\",\n        emailData: \"\"\n}\nthis.handleFirstName = this.handleFirstName.bind(this)\nthis.handleSecondName = this.handleSecondName.bind(this)\nthis.handleDomainName = this.handleDomainName.bind(this)\nthis.stringManipulation = this.stringManipulation.bind(this)\nthis.removeWhiteSpace = this.removeWhiteSpace.bind(this)\n\n}\n\nhandleFirstName(event) {\nthis.setState({firstName: event.target.value})\n}\n\n\nhandleSecondName(event) {\nthis.setState({ secondName: event.target.value})\n}\n\nhandleDomainName(event) {\nthis.setState({ domainName: event.target.value})\n}\n\npassData() {\n  // return (this.state.firstName, this.state.secondName, this.state.domainName)\n  let data = { first_name: this.state.firstName, second_name: this.state.secondName, domain_name: this.state.domainName }\n  return ( data )\n}\n\nsanityChecking() {\n  let firstname = this.state.firstName\n  let secondname = this.state.secondName\n  let domainname = this.state.domainName\n\n  // check if there is any whitespace\n  if ( /\\s/.test(firstname)==true ||  /\\s/.test(secondname)==true ||  /\\s/.test(domainname)==true ) {\n    console.log(\"ERROR space\")\n  } else {\n    console.log(\"GOOD space\")\n  }\n\n  // check that all inputs are not empty\n  if (firstname==null || firstname==\"\" || secondname==null || secondname==\"\" || domainname==null || domainname==\"\")\n{\n  console.log(\"ERROR empty string \")\n} else {\n  console.log(\"GOOD empty string\")\n}\n\n\n   // that domain has @ in it and at least one dot\n   if (domainname.charAt(0) !== \"@\" || domainname.includes(\".\") === false ) {\n     console.log(\"ERROR @ or . \")\n   } else {\n     console.log(\"GOOD @ or .\")\n   }\n\n\n   // check length of inputs\n   if (firstname.length > 15 || secondname.length > 15 || domainname.length > 24) {\n       console.log(\"ERROR length \")\n      } else {\n        console.log(\"GOOD length\")\n      }\n\n      this.predictEmail()\n}\n\nremoveWhiteSpace() {\n  this.setState({ firstName: this.state.firstName.trim() },\n  this.setState({ secondName: this.state.secondName.trim()},\n  this.setState({ domainName: this.state.domainName.trim()},\n    ()=> {this.sanityChecking()} )\n    )\n  )\n  // this.setState({ secondName: this.state.secondName.trim() })\n  // this.setState({ domainName: this.state.domainName.trim() })\n}\n\npredictEmail() {\n  let firstname = this.state.firstName\n  let secondname = this.state.secondName\n  let domainname = this.state.domainName\n  let emailOne = firstname+domainname\n  let emailTwo = secondname+domainname\n  let emailThree = firstname+secondname+domainname\n  let emailFour = firstname.charAt(0)+secondname+domainname\n  let emailFive = firstname+\".\"+secondname+domainname\n  let emailSix = firstname+\"_\"+secondname+domainname\n\n  let emailData = {\n    emailOne: emailOne, emailTwo: emailTwo, emailThree: emailThree,\n    emailFour: emailFour, emailFive: emailFive, emailSix: emailSix\n  }\n\n  // this.props.passDataApp(emailData)\n  // console.log(emailData)\n  this.setState({emailData: emailData},   ()=> {this.props.passDataApp(this.state.emailData)}  );\n\n}\n\nstringManipulation() {\n  this.removeWhiteSpace()\n  // let firstname = this.state.firstName\n  // let secondname = this.state.secondName\n  // let domainname = this.state.domainName\n  // let emailOne = firstname+domainname\n  // let emailTwo = secondname+domainname\n  // let emailThree = firstname+secondname+domainname\n  // let emailFour = firstname.charAt(0)+secondname+domainname\n  // let emailFive = firstname+\".\"+secondname+domainname\n  // let emailSix = firstname+\"_\"+secondname+domainname\n  //\n  // let emailData = {\n  //   emailOne: emailOne, emailTwo: emailTwo, emailThree: emailThree,\n  //   emailFour: emailFour, emailFive: emailFive, emailSix: emailSix\n  // }\n  //\n  // // this.props.passDataApp(emailData)\n  // // console.log(emailData)\n  // this.setState({emailData: emailData},   ()=> {this.props.passDataApp(this.state.emailData)}  );\n  // this.setState({emailData: emailData}, this.props.passDataApp(this.state.emailData))\n\n}\n\nerrorInputs() {\n\n  const Label = styled.label`\n            height: 24px;\n            font-size: 17px;\n            font-weight: normal;\n            font-style: normal;\n            font-stretch: normal;\n            line-height: normal;\n            letter-spacing: 0.7px;\n            color: #ffffff;\n            display: block;\n          `;\n\n    const ErrorFont = styled.p`\n    /* height: 24px;\n    font-size: 17px;\n    font-weight: normal;\n    font-style: normal;\n    font-stretch: normal;\n    line-height: normal;\n    letter-spacing: 0.7px; */\n    color: #FD0909;\n    display: block;\n    margin-top : -1px;\n\n    `\n\n\n\n  return(\n    <div>\n    <Label>FIRST NAME</Label>\n    <input id=\"ErrorInput\" value={this.state.firstName} onChange={(event)=>{this.handleFirstName(event);}} placeholder=\"mark\"/>\n    <ErrorFont>hmm this is required </ErrorFont>\n    </div>\n  )\n}\n\n\nrender() {\n  const Input = styled.input`\n            width: 229px;\n            height: 42px;\n            background: transparent;\n            border: solid 1px rgba(0, 0, 0, 0.45);\n            box-shadow: 0px 0px 0px 1.5px #f8e71c;\n            border-radius: 8px;\n            display: block;\n            font-size: 15px;\n            font-weight: normal;\n            font-style: normal;\n            font-stretch: normal;\n            line-height: normal;\n            letter-spacing: 0.7px;\n            color: #ffffff;\n            padding-left: 5px;\n\n          `;\n\n  const Label = styled.label`\n            height: 24px;\n            font-size: 17px;\n            font-weight: normal;\n            font-style: normal;\n            font-stretch: normal;\n            line-height: normal;\n            letter-spacing: 0.7px;\n            color: #ffffff;\n            display: block;\n          `;\n\n\n\n    return (\n\n      <div id=\"Flexbox_Div_inputs\">\n        <div>\n          {this.errorInputs()}\n        </div>\n        <div>\n          <Label>SECOND NAME</Label>\n          <input id=\"MainInput\" value={this.state.secondName} onChange={(event)=>{this.handleSecondName(event);}}   placeholder=\"zuck\"/>\n        </div>\n        <div>\n          <Label>DOMAIN</Label>\n          <input id=\"MainInput\" value={this.state.domainName} onChange={(event)=>{this.handleDomainName(event);}}  placeholder=\"@fb.com\"/>\n        </div>\n        </div>\n    );\n  }\n}\n\n\nexport default InputTesting;\n"]},"metadata":{},"sourceType":"module"}