{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/telsheikh/Desktop/Beans/beans2/src/Components/InputTesting.js\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n            height: 24px;\\n            font-size: 17px;\\n            font-weight: normal;\\n            font-style: normal;\\n            font-stretch: normal;\\n            line-height: normal;\\n            letter-spacing: 0.7px;\\n            color: #ffffff;\\n            display: block;\\n          \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n            width: 229px;\\n            height: 42px;\\n            background: transparent;\\n            border: solid 1px rgba(0, 0, 0, 0.45);\\n            box-shadow: 0px 0px 0px 1.5px #f8e71c;\\n            border-radius: 8px;\\n            display: block;\\n            font-size: 15px;\\n            font-weight: normal;\\n            font-style: normal;\\n            font-stretch: normal;\\n            line-height: normal;\\n            letter-spacing: 0.7px;\\n            color: #ffffff;\\n            padding-left: 5px;\\n\\n          \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    color: #FD0909;\\n    display: block;\\n    margin-top : 5.5px;\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n                    color: #FD0909;\\n                  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n            height: 24px;\\n            font-size: 17px;\\n            font-weight: normal;\\n            font-style: normal;\\n            font-stretch: normal;\\n            line-height: normal;\\n            letter-spacing: 0.7px;\\n            color: #ffffff;\\n            display: block;\\n          \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nvar InputTesting =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputTesting, _Component);\n\n  function InputTesting() {\n    var _this;\n\n    _classCallCheck(this, InputTesting);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputTesting).call(this));\n    _this.state = {\n      firstName: \"\",\n      secondName: \"\",\n      domainName: \"\",\n      emailData: \"\",\n      errorFirstNameMessage: \"\",\n      errorFirstNameFound: \"\",\n      errorSecondNameMessage: \"\",\n      errorSecondNameFound: \"\",\n      errorThirdNameMessage: \"\",\n      errorThirdNameFound: \"\"\n    };\n    _this.handleFirstName = _this.handleFirstName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSecondName = _this.handleSecondName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDomainName = _this.handleDomainName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.stringManipulation = _this.stringManipulation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeWhiteSpace = _this.removeWhiteSpace.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.checkWhitespace = _this.checkWhitespace.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(InputTesting, [{\n    key: \"handleFirstName\",\n    value: function handleFirstName(event) {\n      this.setState({\n        firstName: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSecondName\",\n    value: function handleSecondName(event) {\n      this.setState({\n        secondName: event.target.value\n      });\n    }\n  }, {\n    key: \"handleDomainName\",\n    value: function handleDomainName(event) {\n      this.setState({\n        domainName: event.target.value\n      });\n    }\n  }, {\n    key: \"passData\",\n    value: function passData() {\n      // return (this.state.firstName, this.state.secondName, this.state.domainName)\n      var data = {\n        first_name: this.state.firstName,\n        second_name: this.state.secondName,\n        domain_name: this.state.domainName\n      };\n      return data;\n    } // check if there is any whitespace\n\n  }, {\n    key: \"checkWhitespace\",\n    value: function checkWhitespace() {\n      if (/\\s/.test(this.state.firstName) == true) {\n        console.log(\"ERROR space firstname\");\n        this.setState({\n          errorFirstNameFound: true\n        });\n        this.setState({\n          errorFirstNameMessage: \"you cant have whitespace\"\n        });\n      } else if (/\\s/.test(this.state.secondName) == true) {\n        console.log(\"ERROR space secondName\");\n        this.setState({\n          errorSecondNameFound: true\n        });\n        this.setState({\n          errorSecondNameMessage: \"you cant have whitespace\"\n        });\n      } else if (/\\s/.test(this.state.domainName) == true) {\n        console.log(\"ERROR space secondName\");\n        this.setState({\n          errorThirdNameFound: true\n        });\n        this.setState({\n          errorThirdNameMessage: \"you cant have whitespace\"\n        });\n      } else {\n        this.setState({\n          errorFirstNameFound: false\n        });\n        this.setState({\n          errorSecondNameFound: false\n        });\n        this.setState({\n          errorThirdNameFound: false\n        });\n        this.setState({\n          errorFirstNameMessage: \"\"\n        });\n        this.setState({\n          errorSecondNameMessage: \"\"\n        });\n        this.setState({\n          errorThirdNameMessage: \"\"\n        });\n        this.checkEmptyInputs();\n      }\n    }\n  }, {\n    key: \"checkEmptyInputs\",\n    value: function checkEmptyInputs() {\n      if (this.state.firstName == null || this.state.firstName == \"\") {\n        console.log(\"ERROR space firstname\");\n        this.setState({\n          errorFirstNameFound: true\n        });\n        this.setState({\n          errorFirstNameMessage: \"you cant have whitespace\"\n        });\n      } else if (this.state.secondName == null || this.state.secondName == \"\") {\n        console.log(\"ERROR space secondName\");\n        this.setState({\n          errorSecondNameFound: true\n        });\n        this.setState({\n          errorSecondNameMessage: \"you cant have whitespace\"\n        });\n      } else if (this.state.domainName == null || this.state.domainName == \"\") {\n        console.log(\"ERROR space secondName\");\n        this.setState({\n          errorThirdNameFound: true\n        });\n        this.setState({\n          errorThirdNameMessage: \"you cant have whitespace\"\n        });\n      } else {\n        this.setState({\n          errorFirstNameFound: false\n        });\n        this.setState({\n          errorSecondNameFound: false\n        });\n        this.setState({\n          errorThirdNameFound: false\n        });\n        this.setState({\n          errorFirstNameMessage: \"\"\n        });\n        this.setState({\n          errorSecondNameMessage: \"\"\n        });\n        this.setState({\n          errorThirdNameMessage: \"\"\n        });\n        this.checkEmptyInputs();\n      }\n    }\n  }, {\n    key: \"checkDomain\",\n    value: function checkDomain() {}\n  }, {\n    key: \"checkLength\",\n    value: function checkLength() {}\n  }, {\n    key: \"sanityChecking\",\n    value: function sanityChecking() {\n      // let firstname = this.state.firstName\n      // let secondname = this.state.secondName\n      // let domainname = this.state.domainName\n      this.checkWhitespace(); // // check if there is any whitespace\n      // if ( /\\s/.test(firstname)==true ||  /\\s/.test(secondname)==true ||  /\\s/.test(domainname)==true ) {\n      //   console.log(\"ERROR space\")\n      //   this.setState({errorFirstNameFound: true})\n      //   this.setState({errorFirstNameMessage: \"you cant have whitespace\"})\n      //\n      // } else {\n      //   console.log(\"GOOD space\")\n      //\n      //\n      //   }\n      //\n      //   // check that all inputs are not empty\n      //   if (firstname==null || firstname==\"\" || secondname==null || secondname==\"\" || domainname==null || domainname==\"\")\n      // {\n      //   console.log(\"ERROR empty string \")\n      // } else {\n      //   console.log(\"GOOD empty string\")\n      // }\n      //\n      //\n      //    // that domain has @ in it and at least one dot\n      //    if (domainname.charAt(0) !== \"@\" || domainname.includes(\".\") === false ) {\n      //      console.log(\"ERROR @ or . \")\n      //    } else {\n      //      console.log(\"GOOD @ or .\")\n      //    }\n      //\n      //\n      //    // check length of inputs\n      //    if (firstname.length > 15 || secondname.length > 15 || domainname.length > 24) {\n      //        console.log(\"ERROR length \")\n      //       } else {\n      //         console.log(\"GOOD length\")\n      //       }\n\n      this.predictEmail();\n    }\n  }, {\n    key: \"removeWhiteSpace\",\n    value: function removeWhiteSpace() {\n      var _this2 = this;\n\n      this.setState({\n        firstName: this.state.firstName.trim()\n      }, this.setState({\n        secondName: this.state.secondName.trim()\n      }, this.setState({\n        domainName: this.state.domainName.trim()\n      }, function () {\n        _this2.sanityChecking();\n      }))); // this.setState({ secondName: this.state.secondName.trim() })\n      // this.setState({ domainName: this.state.domainName.trim() })\n    }\n  }, {\n    key: \"predictEmail\",\n    value: function predictEmail() {\n      var _this3 = this;\n\n      var firstname = this.state.firstName;\n      var secondname = this.state.secondName;\n      var domainname = this.state.domainName;\n      var emailOne = firstname + domainname;\n      var emailTwo = secondname + domainname;\n      var emailThree = firstname + secondname + domainname;\n      var emailFour = firstname.charAt(0) + secondname + domainname;\n      var emailFive = firstname + \".\" + secondname + domainname;\n      var emailSix = firstname + \"_\" + secondname + domainname;\n      var emailData = {\n        emailOne: emailOne,\n        emailTwo: emailTwo,\n        emailThree: emailThree,\n        emailFour: emailFour,\n        emailFive: emailFive,\n        emailSix: emailSix // this.props.passDataApp(emailData)\n        // console.log(emailData)\n\n      };\n      this.setState({\n        emailData: emailData\n      }, function () {\n        _this3.props.passDataApp(_this3.state.emailData);\n      });\n    }\n  }, {\n    key: \"stringManipulation\",\n    value: function stringManipulation() {\n      this.removeWhiteSpace();\n    }\n  }, {\n    key: \"errorInputs\",\n    value: function errorInputs() {\n      var _this4 = this;\n\n      var Label = styled.label(_templateObject());\n      var Star = styled.label(_templateObject2());\n      var ErrorFont = styled.p(_templateObject3());\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Star, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"*\"), \" FIRST NAME\"), React.createElement(\"input\", {\n        id: \"ErrorInput\",\n        value: this.state.firstName,\n        onChange: function onChange(event) {\n          _this4.handleFirstName(event);\n        },\n        placeholder: \"mark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(ErrorFont, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"hmm this is required \"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var Input = styled.input(_templateObject4());\n      var Label = styled.label(_templateObject5());\n      return React.createElement(\"div\", {\n        id: \"Flexbox_Div_inputs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, this.errorInputs()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, \"SECOND NAME\"), React.createElement(\"input\", {\n        id: \"MainInput\",\n        value: this.state.secondName,\n        onChange: function onChange(event) {\n          _this5.handleSecondName(event);\n        },\n        placeholder: \"zuck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"DOMAIN\"), React.createElement(\"input\", {\n        id: \"MainInput\",\n        value: this.state.domainName,\n        onChange: function onChange(event) {\n          _this5.handleDomainName(event);\n        },\n        placeholder: \"@fb.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return InputTesting;\n}(Component);\n\nexport default InputTesting;","map":{"version":3,"sources":["/Users/telsheikh/Desktop/Beans/beans2/src/Components/InputTesting.js"],"names":["React","Component","styled","InputTesting","state","firstName","secondName","domainName","emailData","errorFirstNameMessage","errorFirstNameFound","errorSecondNameMessage","errorSecondNameFound","errorThirdNameMessage","errorThirdNameFound","handleFirstName","bind","handleSecondName","handleDomainName","stringManipulation","removeWhiteSpace","checkWhitespace","event","setState","target","value","data","first_name","second_name","domain_name","test","console","log","checkEmptyInputs","predictEmail","trim","sanityChecking","firstname","secondname","domainname","emailOne","emailTwo","emailThree","emailFour","charAt","emailFive","emailSix","props","passDataApp","Label","label","Star","ErrorFont","p","Input","input","errorInputs"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\n\nclass InputTesting extends Component {\n  constructor() {\n      super();\n      this.state = {\n        firstName: \"\",\n        secondName: \"\",\n        domainName: \"\",\n        emailData: \"\",\n        errorFirstNameMessage: \"\",\n        errorFirstNameFound: \"\",\n        errorSecondNameMessage: \"\",\n        errorSecondNameFound: \"\",\n        errorThirdNameMessage: \"\",\n        errorThirdNameFound: \"\"\n}\nthis.handleFirstName = this.handleFirstName.bind(this)\nthis.handleSecondName = this.handleSecondName.bind(this)\nthis.handleDomainName = this.handleDomainName.bind(this)\nthis.stringManipulation = this.stringManipulation.bind(this)\nthis.removeWhiteSpace = this.removeWhiteSpace.bind(this)\nthis.checkWhitespace = this.checkWhitespace.bind(this)\n\n}\n\nhandleFirstName(event) {\nthis.setState({firstName: event.target.value})\n}\n\n\nhandleSecondName(event) {\nthis.setState({ secondName: event.target.value})\n}\n\nhandleDomainName(event) {\nthis.setState({ domainName: event.target.value})\n}\n\npassData() {\n  // return (this.state.firstName, this.state.secondName, this.state.domainName)\n  let data = { first_name: this.state.firstName, second_name: this.state.secondName, domain_name: this.state.domainName }\n  return ( data )\n}\n\n// check if there is any whitespace\ncheckWhitespace() {\n  if ( /\\s/.test(this.state.firstName)==true) {\n    console.log(\"ERROR space firstname\")\n    this.setState({errorFirstNameFound: true})\n    this.setState({errorFirstNameMessage: \"you cant have whitespace\"})\n  }\n  else if ( /\\s/.test(this.state.secondName)==true) {\n    console.log(\"ERROR space secondName\")\n    this.setState({errorSecondNameFound: true})\n    this.setState({errorSecondNameMessage: \"you cant have whitespace\"})\n\n  }  else if ( /\\s/.test(this.state.domainName)==true) {\n      console.log(\"ERROR space secondName\")\n      this.setState({errorThirdNameFound: true})\n      this.setState({errorThirdNameMessage: \"you cant have whitespace\"})\n    }\n\n    else {\n      this.setState({errorFirstNameFound: false})\n      this.setState({errorSecondNameFound: false})\n      this.setState({errorThirdNameFound: false})\n      this.setState({errorFirstNameMessage: \"\"})\n      this.setState({errorSecondNameMessage: \"\"})\n      this.setState({errorThirdNameMessage: \"\"})\n      this.checkEmptyInputs()\n    }\n\n}\n\ncheckEmptyInputs() {\n  if ( this.state.firstName==null || this.state.firstName==\"\") {\n    console.log(\"ERROR space firstname\")\n    this.setState({errorFirstNameFound: true})\n    this.setState({errorFirstNameMessage: \"you cant have whitespace\"})\n  }\n  else if ( this.state.secondName==null || this.state.secondName==\"\"){\n    console.log(\"ERROR space secondName\")\n    this.setState({errorSecondNameFound: true})\n    this.setState({errorSecondNameMessage: \"you cant have whitespace\"})\n\n  }  else if ( this.state.domainName==null || this.state.domainName==\"\") {\n      console.log(\"ERROR space secondName\")\n      this.setState({errorThirdNameFound: true})\n      this.setState({errorThirdNameMessage: \"you cant have whitespace\"})\n    }\n\n    else {\n      this.setState({errorFirstNameFound: false})\n      this.setState({errorSecondNameFound: false})\n      this.setState({errorThirdNameFound: false})\n      this.setState({errorFirstNameMessage: \"\"})\n      this.setState({errorSecondNameMessage: \"\"})\n      this.setState({errorThirdNameMessage: \"\"})\n      this.checkEmptyInputs()\n    }\n}\n\ncheckDomain() {\n\n}\n\ncheckLength() {\n\n}\n\nsanityChecking() {\n  // let firstname = this.state.firstName\n  // let secondname = this.state.secondName\n  // let domainname = this.state.domainName\n\n  this.checkWhitespace()\n\n  // // check if there is any whitespace\n  // if ( /\\s/.test(firstname)==true ||  /\\s/.test(secondname)==true ||  /\\s/.test(domainname)==true ) {\n  //   console.log(\"ERROR space\")\n  //   this.setState({errorFirstNameFound: true})\n  //   this.setState({errorFirstNameMessage: \"you cant have whitespace\"})\n  //\n  // } else {\n  //   console.log(\"GOOD space\")\n//\n//\n//   }\n//\n//   // check that all inputs are not empty\n//   if (firstname==null || firstname==\"\" || secondname==null || secondname==\"\" || domainname==null || domainname==\"\")\n// {\n//   console.log(\"ERROR empty string \")\n// } else {\n//   console.log(\"GOOD empty string\")\n// }\n//\n//\n//    // that domain has @ in it and at least one dot\n//    if (domainname.charAt(0) !== \"@\" || domainname.includes(\".\") === false ) {\n//      console.log(\"ERROR @ or . \")\n//    } else {\n//      console.log(\"GOOD @ or .\")\n//    }\n//\n//\n//    // check length of inputs\n//    if (firstname.length > 15 || secondname.length > 15 || domainname.length > 24) {\n//        console.log(\"ERROR length \")\n//       } else {\n//         console.log(\"GOOD length\")\n//       }\n\n      this.predictEmail()\n}\n\nremoveWhiteSpace() {\n  this.setState({ firstName: this.state.firstName.trim() },\n  this.setState({ secondName: this.state.secondName.trim()},\n  this.setState({ domainName: this.state.domainName.trim()},\n    ()=> {this.sanityChecking()} )\n    )\n  )\n  // this.setState({ secondName: this.state.secondName.trim() })\n  // this.setState({ domainName: this.state.domainName.trim() })\n}\n\npredictEmail() {\n  let firstname = this.state.firstName\n  let secondname = this.state.secondName\n  let domainname = this.state.domainName\n  let emailOne = firstname+domainname\n  let emailTwo = secondname+domainname\n  let emailThree = firstname+secondname+domainname\n  let emailFour = firstname.charAt(0)+secondname+domainname\n  let emailFive = firstname+\".\"+secondname+domainname\n  let emailSix = firstname+\"_\"+secondname+domainname\n\n  let emailData = {\n    emailOne: emailOne, emailTwo: emailTwo, emailThree: emailThree,\n    emailFour: emailFour, emailFive: emailFive, emailSix: emailSix\n  }\n\n  // this.props.passDataApp(emailData)\n  // console.log(emailData)\n  this.setState({emailData: emailData},   ()=> {this.props.passDataApp(this.state.emailData)}  );\n\n}\n\nstringManipulation() {\n  this.removeWhiteSpace()\n}\n\nerrorInputs() {\n\n  const Label = styled.label`\n            height: 24px;\n            font-size: 17px;\n            font-weight: normal;\n            font-style: normal;\n            font-stretch: normal;\n            line-height: normal;\n            letter-spacing: 0.7px;\n            color: #ffffff;\n            display: block;\n          `;\n\n    const Star = styled.label`\n                    color: #FD0909;\n                  `;\n\n\n\n\n    const ErrorFont = styled.p`\n    color: #FD0909;\n    display: block;\n    margin-top : 5.5px;\n    `\n\n\n\n  return(\n    <div>\n    <Label><Star>*</Star> FIRST NAME</Label>\n    <input id=\"ErrorInput\" value={this.state.firstName} onChange={(event)=>{this.handleFirstName(event);}} placeholder=\"mark\"/>\n    <ErrorFont>hmm this is required </ErrorFont>\n    </div>\n  )\n}\n\n\nrender() {\n  const Input = styled.input`\n            width: 229px;\n            height: 42px;\n            background: transparent;\n            border: solid 1px rgba(0, 0, 0, 0.45);\n            box-shadow: 0px 0px 0px 1.5px #f8e71c;\n            border-radius: 8px;\n            display: block;\n            font-size: 15px;\n            font-weight: normal;\n            font-style: normal;\n            font-stretch: normal;\n            line-height: normal;\n            letter-spacing: 0.7px;\n            color: #ffffff;\n            padding-left: 5px;\n\n          `;\n\n  const Label = styled.label`\n            height: 24px;\n            font-size: 17px;\n            font-weight: normal;\n            font-style: normal;\n            font-stretch: normal;\n            line-height: normal;\n            letter-spacing: 0.7px;\n            color: #ffffff;\n            display: block;\n          `;\n\n\n\n    return (\n\n      <div id=\"Flexbox_Div_inputs\">\n        <div>\n          {this.errorInputs()}\n        </div>\n        <div>\n          <Label>SECOND NAME</Label>\n          <input id=\"MainInput\" value={this.state.secondName} onChange={(event)=>{this.handleSecondName(event);}}   placeholder=\"zuck\"/>\n        </div>\n        <div>\n          <Label>DOMAIN</Label>\n          <input id=\"MainInput\" value={this.state.domainName} onChange={(event)=>{this.handleDomainName(event);}}  placeholder=\"@fb.com\"/>\n        </div>\n        </div>\n    );\n  }\n}\n\n\nexport default InputTesting;\n"]},"metadata":{},"sourceType":"module"}