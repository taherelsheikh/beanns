{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/telsheikh/Desktop/Beans/beans2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/telsheikh/Desktop/Beans/beans2/src/Components/InputTesting.js\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n            height: 24px;\\n            font-size: 17px;\\n            font-weight: normal;\\n            font-style: normal;\\n            font-stretch: normal;\\n            line-height: normal;\\n            letter-spacing: 0.7px;\\n            color: #ffffff;\\n            display: block;\\n          \"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n            width: 229px;\\n            height: 42px;\\n            background: transparent;\\n            border: solid 1px rgba(0, 0, 0, 0.45);\\n            box-shadow: 0px 0px 0px 1.5px #f8e71c;\\n            border-radius: 8px;\\n            display: block;\\n            font-size: 15px;\\n            font-weight: normal;\\n            font-style: normal;\\n            font-stretch: normal;\\n            line-height: normal;\\n            letter-spacing: 0.7px;\\n            color: #ffffff;\\n            padding-left: 5px;\\n\\n          \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    color: #FD0909;\\n    display: block;\\n    margin-top : 5.5px;\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n                    color: #FD0909;\\n                  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n            height: 24px;\\n            font-size: 17px;\\n            font-weight: normal;\\n            font-style: normal;\\n            font-stretch: normal;\\n            line-height: normal;\\n            letter-spacing: 0.7px;\\n            color: #ffffff;\\n            display: block;\\n          \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nvar InputTesting =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputTesting, _Component);\n\n  function InputTesting() {\n    var _this;\n\n    _classCallCheck(this, InputTesting);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InputTesting).call(this));\n    _this.state = {\n      firstName: \"\",\n      secondName: \"\",\n      domainName: \"\",\n      emailData: \"\",\n      errorFirstNameFound: false,\n      errorFirstNameMessage: \"\",\n      errorSecondNameFound: false,\n      errorSecondNameMessage: \"\",\n      errorDomainNameFound: false,\n      errorDomainNameMessage: \"\"\n    };\n    _this.handleFirstName = _this.handleFirstName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSecondName = _this.handleSecondName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDomainName = _this.handleDomainName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.stringManipulation = _this.stringManipulation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeWhiteSpace = _this.removeWhiteSpace.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.checkWhitespace = _this.checkWhitespace.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.checkEmptyInputs = _this.checkEmptyInputs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.checkDomain = _this.checkDomain.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.checkLength = _this.checkLength.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(InputTesting, [{\n    key: \"handleFirstName\",\n    value: function handleFirstName(event) {\n      this.setState({\n        firstName: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSecondName\",\n    value: function handleSecondName(event) {\n      this.setState({\n        secondName: event.target.value\n      });\n    }\n  }, {\n    key: \"handleDomainName\",\n    value: function handleDomainName(event) {\n      this.setState({\n        domainName: event.target.value\n      });\n    }\n  }, {\n    key: \"passData\",\n    value: function passData() {\n      // return (this.state.firstName, this.state.secondName, this.state.domainName)\n      var data = {\n        first_name: this.state.firstName,\n        second_name: this.state.secondName,\n        domain_name: this.state.domainName\n      };\n      return data;\n    } // check if there is any whitespace\n\n  }, {\n    key: \"checkWhitespace\",\n    value: function checkWhitespace() {\n      if (/\\s/.test(this.state.firstName) == true) {\n        console.log(\"ERROR space firstname\");\n        this.setState({\n          errorFirstNameFound: true\n        });\n        this.setState({\n          errorFirstNameMessage: \"you cant have whitespace\"\n        });\n      } else if (/\\s/.test(this.state.secondName) == true) {\n        console.log(\"ERROR space secondName\");\n        this.setState({\n          errorSecondNameFound: true\n        });\n        this.setState({\n          errorSecondNameMessage: \"you cant have whitespace\"\n        });\n      } else if (/\\s/.test(this.state.domainName) == true) {\n        console.log(\"ERROR space domainName\");\n        this.setState({\n          errorDomainNameFound: true\n        });\n        this.setState({\n          errorDomainNameMessage: \"you cant have whitespace\"\n        });\n      } else {\n        console.log(\"GOOD whitespace \");\n        this.setState({\n          errorFirstNameFound: false\n        });\n        this.setState({\n          errorSecondNameFound: false\n        });\n        this.setState({\n          errorDomainNameFound: false\n        });\n        this.setState({\n          errorFirstNameMessage: \"\"\n        });\n        this.setState({\n          errorSecondNameMessage: \"\"\n        });\n        this.setState({\n          errorDomainNameMessage: \"\"\n        });\n        this.checkDomain();\n      }\n    } // check empty inputs\n\n  }, {\n    key: \"checkEmptyInputs\",\n    value: function checkEmptyInputs() {\n      if (this.state.firstName == null || this.state.firstName == \"\") {\n        console.log(\"ERROR empty inputs firstName\");\n        this.setState({\n          errorFirstNameFound: true\n        });\n        this.setState({\n          errorFirstNameMessage: \"whats the first name?\"\n        });\n      } else if (this.state.secondName == null || this.state.secondName == \"\") {\n        console.log(\"ERROR empty inputs secondName\");\n        this.setState({\n          errorFirstNameFound: false\n        });\n        this.setState({\n          errorFirstNameMessage: \"\"\n        });\n        this.setState({\n          errorSecondNameFound: true\n        });\n        this.setState({\n          errorSecondNameMessage: \"whats the second name?\"\n        });\n      } else if (this.state.domainName == null || this.state.domainName == \"\") {\n        console.log(\"ERROR empty inputs domainName\");\n        this.setState({\n          errorFirstNameFound: false\n        });\n        this.setState({\n          errorFirstNameMessage: \"\"\n        });\n        this.setState({\n          errorSecondNameFound: false\n        });\n        this.setState({\n          errorSecondNameMessage: \"\"\n        });\n        this.setState({\n          errorDomainNameFound: true\n        });\n        this.setState({\n          errorDomainNameMessage: \"whats the domain name?\"\n        });\n      } else {\n        console.log(\"GOOD empty inputs \");\n        this.setState({\n          errorDomainNameFound: false\n        });\n        this.setState({\n          errorDomainNameMessage: \"\"\n        });\n        this.checkWhitespace();\n      }\n    }\n  }, {\n    key: \"checkDomain\",\n    value: function checkDomain() {\n      var domainname = this.state.domainName;\n\n      if (domainname.charAt(0) !== \"@\" || domainname.includes(\".\") === false) {\n        console.log(\"ERROR @ or . \");\n        this.setState({\n          errorDomainNameFound: true\n        });\n        this.setState({\n          errorDomainNameMessage: \"domains have to have @ and .\"\n        });\n      } else {\n        console.log(\"GOOD @ or .\");\n        this.setState({\n          errorDomainNameFound: false\n        });\n        this.setState({\n          errorDomainNameMessage: \"\"\n        });\n        this.checkLength();\n      }\n    }\n  }, {\n    key: \"checkLength\",\n    value: function checkLength() {\n      var firstname = this.state.firstName;\n      var secondname = this.state.secondName;\n      var domainname = this.state.domainName; // check length of inputs\n      // if (firstname.length > 15)  || secondname.length > 15 || domainname.length > 24) {\n\n      if (firstname.length > 15) {\n        console.log(\"ERROR length firstname\");\n        this.setState({\n          errorFirstNameFound: true\n        });\n        this.setState({\n          errorFirstNameMessage: \"first name cant be more than 15 char\"\n        });\n      } else if (secondname.length > 15) {\n        console.log(\"ERROR length secondname \");\n        this.setState({\n          errorSecondNameFound: true\n        });\n        this.setState({\n          errorSecondNameMessage: \"second name cant be more than 15 char\"\n        });\n      } else if (domainname.length > 24) {\n        console.log(\"ERROR length domainname \");\n        this.setState({\n          errorDomainNameFound: true\n        });\n        this.setState({\n          errorDomainNameMessage: \"domain cant be more than 24 char\"\n        });\n      } else {\n        console.log(\"GOOD length \");\n        this.setState({\n          errorFirstNameFound: false\n        });\n        this.setState({\n          errorSecondNameFound: false\n        });\n        this.setState({\n          errorDomainNameFound: false\n        });\n        this.setState({\n          errorFirstNameMessage: \"\"\n        });\n        this.setState({\n          errorSecondNameMessage: \"\"\n        });\n        this.setState({\n          errorDomainNameMessage: \"\"\n        });\n        this.predictEmail();\n      }\n    }\n  }, {\n    key: \"sanityChecking\",\n    value: function sanityChecking() {\n      // this.checkEmptyInputs()\n      this.checkFirstName();\n      this.checkSecondName();\n      this.checkDomain();\n\n      if (this.state.errorFirstNameFound == false && this.state.errorSecondNameFound == false && this.state.errorDomainNameFound == false) {\n        console.log(\"SUCCESS\");\n      }\n    }\n  }, {\n    key: \"checkFirstName\",\n    value: function checkFirstName() {\n      // check empty inputs\n      if (this.state.firstName == null || this.state.firstName == \"\") {\n        console.log(\"ERROR empty inputs firstName\");\n        this.setState({\n          errorFirstNameFound: true\n        });\n        this.setState({\n          errorFirstNameMessage: \"whats the first name?\"\n        });\n      } else {\n        console.log(\"GOOD empty inputs firstName\");\n        this.setState({\n          errorFirstNameFound: false\n        });\n        this.setState({\n          errorFirstNameMessage: \"\"\n        }); // check space inputs\n\n        if (/\\s/.test(this.state.firstName) == true) {\n          console.log(\"ERROR space firstname\");\n          this.setState({\n            errorFirstNameFound: true\n          });\n          this.setState({\n            errorFirstNameMessage: \"you can't have whitespace\"\n          });\n        } else {\n          console.log(\"GOOD space firstname\");\n          this.setState({\n            errorFirstNameFound: false\n          });\n          this.setState({\n            errorFirstNameMessage: \"\"\n          }); // check length\n\n          if (this.state.firstName.length > 15) {\n            console.log(\"ERROR length firstname\");\n            this.setState({\n              errorFirstNameFound: true\n            });\n            this.setState({\n              errorFirstNameMessage: \"first name is too long\"\n            });\n          } else {\n            console.log(\"GOOD length\");\n            this.setState({\n              errorFirstNameFound: false\n            });\n            this.setState({\n              errorFirstNameMessage: \"\"\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"checkSecondName\",\n    value: function checkSecondName() {\n      // check empty inputs\n      if (this.state.secondName == null || this.state.secondName == \"\") {\n        console.log(\"ERROR empty inputs secondname\");\n        this.setState({\n          errorSecondNameFound: true\n        });\n        this.setState({\n          errorSecondNameMessage: \"whats the second name?\"\n        });\n      } else {\n        console.log(\"GOOD empty inputs secondname\");\n        this.setState({\n          errorSecondNameFound: false\n        });\n        this.setState({\n          errorSecondNameMessage: \"\"\n        }); // check space inputs\n\n        if (/\\s/.test(this.state.secondName) == true) {\n          console.log(\"ERROR space secondname\");\n          this.setState({\n            errorSecondNameFound: true\n          });\n          this.setState({\n            errorSecondNameMessage: \"you can't have whitespace\"\n          });\n        } else {\n          console.log(\"GOOD space secondname\");\n          this.setState({\n            errorSecondNameFound: false\n          });\n          this.setState({\n            errorSecondNameMessage: \"\"\n          }); // check length\n\n          if (this.state.secondName.length > 15) {\n            console.log(\"ERROR length secondname\");\n            this.setState({\n              errorSecondNameFound: true\n            });\n            this.setState({\n              errorSecondNameMessage: \"second name is too long\"\n            });\n          } else {\n            console.log(\"GOOD length secondname\");\n            this.setState({\n              errorSecondNameFound: false\n            });\n            this.setState({\n              errorSecondNameMessage: \"\"\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"checkDomain\",\n    value: function checkDomain() {\n      // check empty inputs\n      if (this.state.domainName == null || this.state.domainName == \"\") {\n        console.log(\"ERROR empty inputs secondname\");\n        this.setState({\n          errorDomainNameFound: true\n        });\n        this.setState({\n          errorDomainNameMessage: \"whats the domain?\"\n        });\n      } else {\n        console.log(\"GOOD empty inputs secondname\");\n        this.setState({\n          errorDomainNameFound: false\n        });\n        this.setState({\n          errorDomainNameMessage: \"\"\n        }); // check space inputs\n\n        if (/\\s/.test(this.state.secondName) == true) {\n          console.log(\"ERROR space secondname\");\n          this.setState({\n            errorDomainNameFound: true\n          });\n          this.setState({\n            errorDomainNameMessage: \"you can't have whitespace\"\n          });\n        } else {\n          console.log(\"GOOD space secondname\");\n          this.setState({\n            errorDomainNameFound: false\n          });\n          this.setState({\n            errorDomainNameMessage: \"\"\n          }); // check length\n\n          if (this.state.domainName.length > 24) {\n            console.log(\"ERROR length secondname\");\n            this.setState({\n              errorDomainNameFound: true\n            });\n            this.setState({\n              errorDomainNameMessage: \"domain is too long\"\n            });\n          } else {\n            console.log(\"GOOD length secondname\");\n            this.setState({\n              errorDomainNameFound: false\n            });\n            this.setState({\n              errorDomainNameMessage: \"\"\n            }); // check domain name\n\n            if (this.state.domainName.charAt(0) !== \"@\" || this.state.domainName.includes(\".\") === false) {\n              console.log(\"ERROR @ or . \");\n              this.setState({\n                errorDomainNameFound: true\n              });\n              this.setState({\n                errorDomainNameMessage: \"domains have to have @ and .\"\n              });\n            } else {\n              console.log(\"GOOD @ or .\");\n              this.setState({\n                errorDomainNameFound: false\n              });\n              this.setState({\n                errorDomainNameMessage: \"\"\n              });\n            }\n          }\n        }\n      }\n    }\n  }, {\n    key: \"removeWhiteSpace\",\n    value: function removeWhiteSpace() {\n      var _this2 = this;\n\n      this.setState({\n        firstName: this.state.firstName.trim()\n      }, this.setState({\n        secondName: this.state.secondName.trim()\n      }, this.setState({\n        domainName: this.state.domainName.trim()\n      }, function () {\n        _this2.sanityChecking();\n      }))); // this.setState({ secondName: this.state.secondName.trim() })\n      // this.setState({ domainName: this.state.domainName.trim() })\n    }\n  }, {\n    key: \"predictEmail\",\n    value: function predictEmail() {\n      var _this3 = this;\n\n      var firstname = this.state.firstName;\n      var secondname = this.state.secondName;\n      var domainname = this.state.domainName;\n      var emailOne = firstname + domainname;\n      var emailTwo = secondname + domainname;\n      var emailThree = firstname + secondname + domainname;\n      var emailFour = firstname.charAt(0) + secondname + domainname;\n      var emailFive = firstname + \".\" + secondname + domainname;\n      var emailSix = firstname + \"_\" + secondname + domainname;\n      var emailData = {\n        emailOne: emailOne,\n        emailTwo: emailTwo,\n        emailThree: emailThree,\n        emailFour: emailFour,\n        emailFive: emailFive,\n        emailSix: emailSix // this.props.passDataApp(emailData)\n        // console.log(emailData)\n\n      };\n      this.setState({\n        emailData: emailData\n      }, function () {\n        _this3.props.passDataApp(_this3.state.emailData);\n      });\n    }\n  }, {\n    key: \"stringManipulation\",\n    value: function stringManipulation() {\n      this.removeWhiteSpace();\n    }\n  }, {\n    key: \"InputsBoxFirstName\",\n    value: function InputsBoxFirstName(input) {\n      var _this4 = this;\n\n      var Label = styled.label(_templateObject());\n      var Star = styled.label(_templateObject2());\n      var ErrorFont = styled.p(_templateObject3());\n\n      if (input === \"firstname\") {\n        if (this.state.errorFirstNameFound) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 371\n            },\n            __self: this\n          }, React.createElement(Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 372\n            },\n            __self: this\n          }, React.createElement(Star, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 372\n            },\n            __self: this\n          }, \"*\"), \" FIRST NAME\"), React.createElement(\"input\", {\n            id: \"ErrorInput\",\n            value: this.state.firstName,\n            onChange: function onChange(event) {\n              _this4.handleFirstName(event);\n            },\n            placeholder: \"mark\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 373\n            },\n            __self: this\n          }), React.createElement(ErrorFont, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 374\n            },\n            __self: this\n          }, this.state.errorFirstNameMessage));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 379\n            },\n            __self: this\n          }, React.createElement(Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 380\n            },\n            __self: this\n          }, \"FIRST NAME \"), React.createElement(\"input\", {\n            id: \"MainInput\",\n            value: this.state.firstName,\n            onChange: function onChange(event) {\n              _this4.handleFirstName(event);\n            },\n            placeholder: \"mark\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 381\n            },\n            __self: this\n          }));\n        }\n      }\n\n      if (input === \"secondname\") {\n        if (this.state.errorSecondNameFound) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 390\n            },\n            __self: this\n          }, React.createElement(Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 391\n            },\n            __self: this\n          }, React.createElement(Star, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 391\n            },\n            __self: this\n          }, \"*\"), \" SECOND NAME\"), React.createElement(\"input\", {\n            id: \"ErrorInput\",\n            value: this.state.secondName,\n            onChange: function onChange(event) {\n              _this4.handleSecondName(event);\n            },\n            placeholder: \"zuck\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 392\n            },\n            __self: this\n          }), React.createElement(ErrorFont, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 393\n            },\n            __self: this\n          }, this.state.errorSecondNameMessage));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 398\n            },\n            __self: this\n          }, React.createElement(Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 399\n            },\n            __self: this\n          }, \"SECOND NAME \"), React.createElement(\"input\", {\n            id: \"MainInput\",\n            value: this.state.secondName,\n            onChange: function onChange(event) {\n              _this4.handleSecondName(event);\n            },\n            placeholder: \"zuck\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 400\n            },\n            __self: this\n          }));\n        }\n      }\n\n      if (input === \"domainname\") {\n        if (this.state.errorDomainNameFound) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 409\n            },\n            __self: this\n          }, React.createElement(Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 410\n            },\n            __self: this\n          }, React.createElement(Star, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 410\n            },\n            __self: this\n          }, \"*\"), \" DOMAIN\"), React.createElement(\"input\", {\n            id: \"ErrorInput\",\n            value: this.state.domainName,\n            onChange: function onChange(event) {\n              _this4.handleDomainName(event);\n            },\n            placeholder: \"@fb.com\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 411\n            },\n            __self: this\n          }), React.createElement(ErrorFont, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 412\n            },\n            __self: this\n          }, this.state.errorDomainNameMessage));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 417\n            },\n            __self: this\n          }, React.createElement(Label, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 418\n            },\n            __self: this\n          }, \"DOMAIN\"), React.createElement(\"input\", {\n            id: \"MainInput\",\n            value: this.state.domainName,\n            onChange: function onChange(event) {\n              _this4.handleDomainName(event);\n            },\n            placeholder: \"@fb.com\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 419\n            },\n            __self: this\n          }));\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Input = styled.input(_templateObject4());\n      var Label = styled.label(_templateObject5());\n      return React.createElement(\"div\", {\n        id: \"Flexbox_Div_inputs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, this.InputsBoxFirstName(\"firstname\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467\n        },\n        __self: this\n      }, this.InputsBoxFirstName(\"secondname\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, this.InputsBoxFirstName(\"domainname\")));\n    }\n  }]);\n\n  return InputTesting;\n}(Component);\n\nexport default InputTesting;","map":{"version":3,"sources":["/Users/telsheikh/Desktop/Beans/beans2/src/Components/InputTesting.js"],"names":["React","Component","styled","InputTesting","state","firstName","secondName","domainName","emailData","errorFirstNameFound","errorFirstNameMessage","errorSecondNameFound","errorSecondNameMessage","errorDomainNameFound","errorDomainNameMessage","handleFirstName","bind","handleSecondName","handleDomainName","stringManipulation","removeWhiteSpace","checkWhitespace","checkEmptyInputs","checkDomain","checkLength","event","setState","target","value","data","first_name","second_name","domain_name","test","console","log","domainname","charAt","includes","firstname","secondname","length","predictEmail","checkFirstName","checkSecondName","trim","sanityChecking","emailOne","emailTwo","emailThree","emailFour","emailFive","emailSix","props","passDataApp","input","Label","label","Star","ErrorFont","p","Input","InputsBoxFirstName"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\n\nclass InputTesting extends Component {\n  constructor() {\n      super();\n      this.state = {\n        firstName: \"\",\n        secondName: \"\",\n        domainName: \"\",\n        emailData: \"\",\n        errorFirstNameFound: false,\n        errorFirstNameMessage: \"\",\n        errorSecondNameFound: false,\n        errorSecondNameMessage: \"\",\n        errorDomainNameFound: false,\n        errorDomainNameMessage: \"\"\n}\nthis.handleFirstName = this.handleFirstName.bind(this)\nthis.handleSecondName = this.handleSecondName.bind(this)\nthis.handleDomainName = this.handleDomainName.bind(this)\nthis.stringManipulation = this.stringManipulation.bind(this)\nthis.removeWhiteSpace = this.removeWhiteSpace.bind(this)\nthis.checkWhitespace = this.checkWhitespace.bind(this)\nthis.checkEmptyInputs = this.checkEmptyInputs.bind(this)\nthis.checkDomain = this.checkDomain.bind(this)\nthis.checkLength = this.checkLength.bind(this)\n}\n\nhandleFirstName(event) {\nthis.setState({firstName: event.target.value})\n}\n\n\nhandleSecondName(event) {\nthis.setState({ secondName: event.target.value})\n}\n\nhandleDomainName(event) {\nthis.setState({ domainName: event.target.value})\n}\n\npassData() {\n  // return (this.state.firstName, this.state.secondName, this.state.domainName)\n  let data = { first_name: this.state.firstName, second_name: this.state.secondName, domain_name: this.state.domainName }\n  return ( data )\n}\n\n// check if there is any whitespace\ncheckWhitespace() {\n  if ( /\\s/.test(this.state.firstName)==true) {\n    console.log(\"ERROR space firstname\")\n    this.setState({errorFirstNameFound: true})\n    this.setState({errorFirstNameMessage: \"you cant have whitespace\"})\n  }\n  else if ( /\\s/.test(this.state.secondName)==true) {\n    console.log(\"ERROR space secondName\")\n    this.setState({errorSecondNameFound: true})\n    this.setState({errorSecondNameMessage: \"you cant have whitespace\"})\n\n  }  else if ( /\\s/.test(this.state.domainName)==true) {\n      console.log(\"ERROR space domainName\")\n      this.setState({errorDomainNameFound: true})\n      this.setState({errorDomainNameMessage: \"you cant have whitespace\"})\n    }\n\n    else {\n      console.log(\"GOOD whitespace \")\n      this.setState({errorFirstNameFound: false})\n      this.setState({errorSecondNameFound: false})\n      this.setState({errorDomainNameFound: false})\n      this.setState({errorFirstNameMessage: \"\"})\n      this.setState({errorSecondNameMessage: \"\"})\n      this.setState({errorDomainNameMessage: \"\"})\n      this.checkDomain()\n    }\n\n}\n\n// check empty inputs\ncheckEmptyInputs() {\n  if ( this.state.firstName==null || this.state.firstName==\"\") {\n    console.log(\"ERROR empty inputs firstName\")\n    this.setState({errorFirstNameFound: true})\n    this.setState({errorFirstNameMessage: \"whats the first name?\"})\n  }\n  else if ( this.state.secondName==null || this.state.secondName==\"\"){\n    console.log(\"ERROR empty inputs secondName\")\n\n    this.setState({errorFirstNameFound: false})\n    this.setState({errorFirstNameMessage: \"\"})\n\n    this.setState({errorSecondNameFound: true})\n    this.setState({errorSecondNameMessage: \"whats the second name?\"})\n\n  }  else if ( this.state.domainName==null || this.state.domainName==\"\") {\n      console.log(\"ERROR empty inputs domainName\")\n\n      this.setState({errorFirstNameFound: false})\n      this.setState({errorFirstNameMessage: \"\"})\n      this.setState({errorSecondNameFound: false})\n      this.setState({errorSecondNameMessage: \"\"})\n\n\n      this.setState({errorDomainNameFound: true})\n      this.setState({errorDomainNameMessage: \"whats the domain name?\"})\n    }\n\n    else {\n      console.log(\"GOOD empty inputs \")\n      this.setState({errorDomainNameFound: false})\n      this.setState({errorDomainNameMessage: \"\"})\n      this.checkWhitespace()\n    }\n}\n\ncheckDomain() {\n  let domainname = this.state.domainName\n     if (domainname.charAt(0) !== \"@\" || domainname.includes(\".\") === false ) {\n       console.log(\"ERROR @ or . \")\n       this.setState({errorDomainNameFound: true})\n       this.setState({errorDomainNameMessage: \"domains have to have @ and .\"})\n     } else {\n       console.log(\"GOOD @ or .\")\n       this.setState({errorDomainNameFound: false})\n       this.setState({errorDomainNameMessage: \"\"})\n       this.checkLength()\n     }\n\n\n}\n\ncheckLength() {\n  let firstname = this.state.firstName\n  let secondname = this.state.secondName\n  let domainname = this.state.domainName\n\n     // check length of inputs\n     // if (firstname.length > 15)  || secondname.length > 15 || domainname.length > 24) {\n     if (firstname.length > 15) {\n         console.log(\"ERROR length firstname\")\n         this.setState({errorFirstNameFound: true})\n         this.setState({errorFirstNameMessage: \"first name cant be more than 15 char\"})\n       }\n       else if (secondname.length > 15) {\n         console.log(\"ERROR length secondname \")\n         this.setState({errorSecondNameFound: true})\n         this.setState({errorSecondNameMessage: \"second name cant be more than 15 char\"})\n        }\n\n        else if (domainname.length > 24) {\n          console.log(\"ERROR length domainname \")\n          this.setState({errorDomainNameFound: true})\n          this.setState({errorDomainNameMessage: \"domain cant be more than 24 char\"})\n        }\n\n        else {\n          console.log(\"GOOD length \")\n          this.setState({errorFirstNameFound: false})\n          this.setState({errorSecondNameFound: false})\n          this.setState({errorDomainNameFound: false})\n          this.setState({errorFirstNameMessage: \"\"})\n          this.setState({errorSecondNameMessage: \"\"})\n          this.setState({errorDomainNameMessage: \"\"})\n          this.predictEmail()\n        }\n\n\n}\n\nsanityChecking() {\n  // this.checkEmptyInputs()\n  this.checkFirstName()\n  this.checkSecondName()\n  this.checkDomain()\n\n  if (this.state.errorFirstNameFound == false && this.state.errorSecondNameFound == false && this.state.errorDomainNameFound == false ) {\n    console.log(\"SUCCESS\")\n  }\n}\n\n\ncheckFirstName() {\n  // check empty inputs\n  if ( this.state.firstName==null || this.state.firstName==\"\") {\n    console.log(\"ERROR empty inputs firstName\")\n    this.setState({errorFirstNameFound: true})\n    this.setState({errorFirstNameMessage: \"whats the first name?\"})\n  }\n  else {\n    console.log(\"GOOD empty inputs firstName\")\n    this.setState({errorFirstNameFound: false})\n    this.setState({errorFirstNameMessage: \"\"})\n    // check space inputs\n  if ( /\\s/.test(this.state.firstName)==true) {\n        console.log(\"ERROR space firstname\")\n        this.setState({errorFirstNameFound: true})\n        this.setState({errorFirstNameMessage: \"you can't have whitespace\"})\n      }\n   else {\n     console.log(\"GOOD space firstname\")\n     this.setState({errorFirstNameFound: false})\n     this.setState({errorFirstNameMessage: \"\"})\n\n     // check length\n     if (this.state.firstName.length > 15) {\n         console.log(\"ERROR length firstname\")\n         this.setState({errorFirstNameFound: true})\n         this.setState({errorFirstNameMessage: \"first name is too long\"})\n       }\n    else {\n      console.log(\"GOOD length\")\n      this.setState({errorFirstNameFound: false})\n      this.setState({errorFirstNameMessage: \"\"})\n    }\n   }\n  }\n}\n\ncheckSecondName() {\n  // check empty inputs\n  if ( this.state.secondName==null || this.state.secondName==\"\") {\n    console.log(\"ERROR empty inputs secondname\")\n    this.setState({errorSecondNameFound: true})\n    this.setState({errorSecondNameMessage: \"whats the second name?\"})\n  }\n  else {\n    console.log(\"GOOD empty inputs secondname\")\n    this.setState({errorSecondNameFound: false})\n    this.setState({errorSecondNameMessage: \"\"})\n\n    // check space inputs\n  if ( /\\s/.test(this.state.secondName)==true) {\n        console.log(\"ERROR space secondname\")\n        this.setState({errorSecondNameFound: true})\n        this.setState({errorSecondNameMessage: \"you can't have whitespace\"})\n      }\n   else {\n     console.log(\"GOOD space secondname\")\n     this.setState({errorSecondNameFound: false})\n     this.setState({errorSecondNameMessage: \"\"})\n\n     // check length\n     if (this.state.secondName.length > 15) {\n         console.log(\"ERROR length secondname\")\n         this.setState({errorSecondNameFound: true})\n         this.setState({errorSecondNameMessage: \"second name is too long\"})\n       }\n    else {\n      console.log(\"GOOD length secondname\")\n      this.setState({errorSecondNameFound: false})\n      this.setState({errorSecondNameMessage: \"\"})\n    }\n   }\n  }\n}\n\ncheckDomain() {\n  // check empty inputs\n  if ( this.state.domainName==null || this.state.domainName==\"\") {\n    console.log(\"ERROR empty inputs secondname\")\n    this.setState({errorDomainNameFound: true})\n    this.setState({errorDomainNameMessage: \"whats the domain?\"})\n  }\n  else {\n    console.log(\"GOOD empty inputs secondname\")\n    this.setState({errorDomainNameFound: false})\n    this.setState({errorDomainNameMessage: \"\"})\n\n    // check space inputs\n  if ( /\\s/.test(this.state.secondName)==true) {\n        console.log(\"ERROR space secondname\")\n        this.setState({errorDomainNameFound: true})\n        this.setState({errorDomainNameMessage: \"you can't have whitespace\"})\n      }\n   else {\n     console.log(\"GOOD space secondname\")\n     this.setState({errorDomainNameFound: false})\n     this.setState({errorDomainNameMessage: \"\"})\n\n     // check length\n     if (this.state.domainName.length > 24) {\n         console.log(\"ERROR length secondname\")\n         this.setState({errorDomainNameFound: true})\n         this.setState({errorDomainNameMessage: \"domain is too long\"})\n       }\n    else {\n      console.log(\"GOOD length secondname\")\n      this.setState({errorDomainNameFound: false})\n      this.setState({errorDomainNameMessage: \"\"})\n      // check domain name\n      if (this.state.domainName.charAt(0) !== \"@\" || this.state.domainName.includes(\".\") === false ) {\n        console.log(\"ERROR @ or . \")\n        this.setState({errorDomainNameFound: true})\n        this.setState({errorDomainNameMessage: \"domains have to have @ and .\"})\n      } else {\n        console.log(\"GOOD @ or .\")\n        this.setState({errorDomainNameFound: false})\n        this.setState({errorDomainNameMessage: \"\"})\n      }\n    }\n   }\n  }\n\n}\n\nremoveWhiteSpace() {\n  this.setState({ firstName: this.state.firstName.trim() },\n  this.setState({ secondName: this.state.secondName.trim()},\n  this.setState({ domainName: this.state.domainName.trim()},\n    ()=> {this.sanityChecking()} )\n    )\n  )\n  // this.setState({ secondName: this.state.secondName.trim() })\n  // this.setState({ domainName: this.state.domainName.trim() })\n}\n\npredictEmail() {\n  let firstname = this.state.firstName\n  let secondname = this.state.secondName\n  let domainname = this.state.domainName\n  let emailOne = firstname+domainname\n  let emailTwo = secondname+domainname\n  let emailThree = firstname+secondname+domainname\n  let emailFour = firstname.charAt(0)+secondname+domainname\n  let emailFive = firstname+\".\"+secondname+domainname\n  let emailSix = firstname+\"_\"+secondname+domainname\n\n  let emailData = {\n    emailOne: emailOne, emailTwo: emailTwo, emailThree: emailThree,\n    emailFour: emailFour, emailFive: emailFive, emailSix: emailSix\n  }\n\n  // this.props.passDataApp(emailData)\n  // console.log(emailData)\n  this.setState({emailData: emailData},   ()=> {this.props.passDataApp(this.state.emailData)}  );\n\n}\n\nstringManipulation() {\n  this.removeWhiteSpace()\n}\n\nInputsBoxFirstName(input) {\n  const Label = styled.label`\n            height: 24px;\n            font-size: 17px;\n            font-weight: normal;\n            font-style: normal;\n            font-stretch: normal;\n            line-height: normal;\n            letter-spacing: 0.7px;\n            color: #ffffff;\n            display: block;\n          `;\n\n    const Star = styled.label`\n                    color: #FD0909;\n                  `;\n\n    const ErrorFont = styled.p`\n    color: #FD0909;\n    display: block;\n    margin-top : 5.5px;\n    `\n\nif (input === \"firstname\") {\nif (this.state.errorFirstNameFound) {\n  return(\n    <div>\n    <Label><Star>*</Star> FIRST NAME</Label>\n    <input id=\"ErrorInput\" value={this.state.firstName} onChange={(event)=>{this.handleFirstName(event);}} placeholder=\"mark\"/>\n    <ErrorFont>{this.state.errorFirstNameMessage}</ErrorFont>\n    </div>\n  )\n} else {\n  return(\n    <div>\n    <Label>FIRST NAME </Label>\n    <input id=\"MainInput\" value={this.state.firstName} onChange={(event)=>{this.handleFirstName(event);}} placeholder=\"mark\"/>\n    </div>\n  )\n}\n}\nif (input === \"secondname\") {\n\nif (this.state.errorSecondNameFound) {\n  return(\n    <div>\n    <Label><Star>*</Star> SECOND NAME</Label>\n    <input id=\"ErrorInput\" value={this.state.secondName} onChange={(event)=>{this.handleSecondName(event);}} placeholder=\"zuck\"/>\n    <ErrorFont>{this.state.errorSecondNameMessage}</ErrorFont>\n    </div>\n  )\n} else {\n  return(\n    <div>\n    <Label>SECOND NAME </Label>\n    <input id=\"MainInput\" value={this.state.secondName} onChange={(event)=>{this.handleSecondName(event);}} placeholder=\"zuck\"/>\n    </div>\n  )\n}\n}\nif (input === \"domainname\") {\n\nif (this.state.errorDomainNameFound) {\n  return(\n    <div>\n    <Label><Star>*</Star> DOMAIN</Label>\n    <input id=\"ErrorInput\" value={this.state.domainName} onChange={(event)=>{this.handleDomainName(event);}} placeholder=\"@fb.com\"/>\n    <ErrorFont>{this.state.errorDomainNameMessage}</ErrorFont>\n    </div>\n  )\n} else {\n  return(\n    <div>\n    <Label>DOMAIN</Label>\n    <input id=\"MainInput\" value={this.state.domainName} onChange={(event)=>{this.handleDomainName(event);}} placeholder=\"@fb.com\"/>\n    </div>\n  )\n}\n}\n\n}\n\n\nrender() {\n  const Input = styled.input`\n            width: 229px;\n            height: 42px;\n            background: transparent;\n            border: solid 1px rgba(0, 0, 0, 0.45);\n            box-shadow: 0px 0px 0px 1.5px #f8e71c;\n            border-radius: 8px;\n            display: block;\n            font-size: 15px;\n            font-weight: normal;\n            font-style: normal;\n            font-stretch: normal;\n            line-height: normal;\n            letter-spacing: 0.7px;\n            color: #ffffff;\n            padding-left: 5px;\n\n          `;\n\n  const Label = styled.label`\n            height: 24px;\n            font-size: 17px;\n            font-weight: normal;\n            font-style: normal;\n            font-stretch: normal;\n            line-height: normal;\n            letter-spacing: 0.7px;\n            color: #ffffff;\n            display: block;\n          `;\n\n\n\n    return (\n      <div id=\"Flexbox_Div_inputs\">\n        <div>\n          {this.InputsBoxFirstName(\"firstname\")}\n        </div>\n        <div>\n          {this.InputsBoxFirstName(\"secondname\")}\n        </div>\n        <div>\n        {this.InputsBoxFirstName(\"domainname\")}\n        </div>\n        </div>\n    );\n  }\n}\n\n\nexport default InputTesting;\n"]},"metadata":{},"sourceType":"module"}